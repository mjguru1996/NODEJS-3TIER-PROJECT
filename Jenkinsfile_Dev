pipeline {
    agent any
    
    tools {    
        nodejs 'nodejs'
    }
    
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }
    stages{
        stage('GIT Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/mjguru1996/Shack.git'
            }
        }
        stage('Frontend Scan') {
            steps {
                echo 'Scanning frontend...'
                dir('client') {
                sh 'find . -name "*.js" -exec node --check {} +'
                }
            }
        }
        stage('Backend Scan') {
            steps {
                echo 'Scanning backend...'
                dir('api') {
                sh 'find . -name "*.js" -exec node --check {} +'
                }
            }
        }
        stage('Gitleaks Scan') {
            steps {
                echo 'Running Gitleaks scan...'
                sh 'gitleaks detect --source ./client --exit-code 1'
                sh 'gitleaks detect --source ./api --exit-code 1'
            }
    }
        stage('Sonarqube Analysis') {
            steps {
                echo 'Running Sonarqube analysis...'
                withSonarQubeEnv('sonar') {
                    // run sonar-scanner; avoid embedded single-quotes that break Groovy parsing
                    sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=NODEJS-Project \
                    -Dsonar.projectKey=NODEJS-Project'''
                }
            }
        }
    }
}
